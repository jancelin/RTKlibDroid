#!/usr/bin/env bash
VAR_FILE='./run/var.conf'
source $VAR_FILE
source ./source/list.conf

#Edition Parameters
Param () {
    echo "Paramétres actuels"
    echo "------------------"
    echo "Positionnement: ${POS}"
    echo "Rate: ${RATE} ms"
    echo "Model: ${listModel[$DYNMODEL]}"
    echo "Elevation: ${MINELEV[$listModel]}°"
    echo "Input Path: ${INPTYPE} ${INPPATH}"
    echo "Type Connexion: ${USBUART}"
    echo "Output Path logs: ${OUTPATH}"
    echo "caster: ${CASTERADDR}:${CASTERPORT} ${CORECTfORMAT}"
    echo "Mount Point: ${MP}"
    echo "GPS :" ${listON[$GPS]} 
    echo "GAL :" ${listON[$GAL]} 
    echo "BDS :" ${listON[$BDS]}
    echo "QZSS:" ${listON[$QZSS]} 
    echo "GLO :" ${listON[$GLO]}
    echo "------------------"
}
#Receiver connection
usbuart (){
while :
do 
  echo ""
  echo "Change ${listUsbUart[$USBUART]}: ${USBUART} to:"
  echo ""
  for i in "${!listUsbUart[@]}"
   do
    num=$i
    value=${listUsbUart[$i]}
    echo "$value : $num"
  done
  OLDUSBUART=${USBUART}
  read answer
  if [ -z "${answer}" ]
	then USBUART=${OLDUSBUART}
	else
	 for i in "${!listUsbUart[@]}"
   	 do
	   if [ ${listUsbUart[$i]} == ${answer} ]
	   then USBUART="$i"
           fi
 	 done		
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
input (){
while :
do 
  echo ""
  echo "Change receiver connection: ${INPTYPE} to:"
  for i in "${!listInput[@]}"
   do
    num=$i
    value=${listInput[$i]}
    echo "$value : $num"
  done
  OLDINPTYPE=${INPTYPE}
  read answer
  if [ -z "${answer}" ]
	then INPTYPE=${OLDINPTYPE}
	else
	 for i in "${!listInput[@]}"
   	 do
	   if [ ${listInput[$i]} == ${answer} ]
	   then INPTYPE="$i"
           fi
 	 done		
  fi
  INPPATH=${listPathInput[$INPTYPE]}
  OUTPATH=${listPathOutput[$INPTYPE]}
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
#CASTER
adresse() {
while :
do 
  echo ""
  echo "change caster adrss:" ${CASTERADDR} "to:"
  OLDCASTERADDR=${CASTERADDR}
  read answer
  if [ -z "${answer}" ]
	then CASTERADDR=${OLDCASTERADDR}
	else CASTERADDR=${answer}
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
Port() {
while :
do 
  echo ""
  echo "change caster port:" ${CASTERPORT} "to:"
  OLDCASTERPORT=${CASTERPORT}
  read answer
  if [ -z "${answer}" ]
	then CASTERPORT=${OLDCASTERPORT}
	else CASTERPORT=${answer}
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
corectformat() {
while :
do 
  echo ""
  echo "Change correction format: ${listPos[${CORECTfORMAT}]}: ${CORECTfORMAT} to:"
  echo ""
  for i in "${!listFormIN[@]}"
   do
    num=$i
    value=${listFormIN[$i]}
    echo "$value : $num"
  done
  OLDCORECTfORMAT=${CORECTfORMAT}
  read answer
  if [ -z "${answer}" ]
	then CORECTfORMAT=${OLDCORECTfORMAT}
	else
	 for i in "${!listFormIN[@]}"
   	 do
	   if [ ${listFormIN[$i]} == ${answer} ]
	   then CORECTfORMAT="$i"
           fi
 	 done		
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
MountP () {
while :
do 
  echo ""
  echo "change Mount Point:" ${MP} "to:"
  OLDMP=${MP}
  read answer
  if [ -z "${answer}" ]
	then MP=${OLDMP}
	else MP=${answer}
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
Psw() {
while :
do 
  echo "!!!Paramètre non intégré!!!"
  echo "change caster password:" ${PASSWORD} "to:"
  read answer
  PASSWORD=${answer}
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  source $VAR_FILE
  return
done
}
Username() {
while :
do 
  echo "!!!Paramètre non intégré!!!"
  echo "change caster username:" ${USERNAME} "to:"
  read answer
  USERNAME=${answer}
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  source $VAR_FILE
  return
done
}
#RTK settings
Pos () {
while :
do 
  echo ""
  echo "Change ${listPos[$POS]}: ${POS} to:"
  echo ""
  for i in "${!listPos[@]}"
   do
    num=$i
    value=${listPos[$i]}
    echo "$value : $num"
  done
  OLDPOS=${POS}
  read answer
  if [ -z "${answer}" ]
	then POS=${OLDPOS}
	else
	 for i in "${!listPos[@]}"
   	 do
	   if [ ${listPos[$i]} == ${answer} ]
	   then POS="$i"
           fi
 	 done		
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
Elev () {
while :
do 
  echo ""
  echo "Change elevation mask: ${MINELEV}° to:"
  OLDMINELEV=${MINELEV}
  read answer
  if [ -z "${answer}" ]
	then MINELEV=${OLDMINELEV}
	else MINELEV=${answer}
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
Model () {
while :
do 
  echo ""
  echo "Change Model: ${DYNMODEL} : ${listModel[$DYNMODEL]} to:"
  echo ""
  for i in "${!listModel[@]}"
   do
    num=$i
    value=${listModel[$i]}
    echo "$num : $value"
  done
  OLDDYNMODEL=$DYNMODEL
  read answer
  if [ -z "${answer}" ]
	then DYNMODEL=${OLDDYNMODEL}
	else DYNMODEL=${answer}
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
Rate () {
while :
do 
  echo ""
  echo "change Rate: ${RATE} ms to:"
  OLDRATE=${RATE}
  read answer
  if [ -z "${answer}" ]
	then RATE=${OLDRATE}
	else RATE=${answer}
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
#Satellites
qzss() {
while :
do 
  echo ""
  echo "QZSS activ:" ${listON[$QZSS]} "to:"
  for i in "${!listON[@]}"
   do
    num=$i
    value=${listON[$i]}
    echo "$value : $num"
  done
  OLDQZSS=${QZSS}
  read answer
  if [ -z "${answer}" ]
	then QZSS=${OLDQZSS}
	else QZSS=${answer}
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
bds() {
while :
do 
  echo ""
  echo "BEIDOU activ:" ${listON[$BDS]} "to:"
  for i in "${!listON[@]}"
   do
    num=$i
    value=${listON[$i]}
    echo "$value : $num"
  done
  OLDBDS=${BDS}
  read answer
  if [ -z "${answer}" ]
	then BDS=${OLDBDS}
	else BDS=${answer}
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
glo() {
while :
do 
  echo ""
  echo "GLONASS activ:" ${listON[$GLO]} "to:"
  for i in "${!listON[@]}"
   do
    num=$i
    value=${listON[$i]}
    echo "$value : $num"
  done
  OLDGLO=${GLO}
  read answer
  if [ -z "${answer}" ]
	then GLO=${OLDGLO}
	else GLO=${answer}
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
gal() {
while :
do 
  echo ""
  echo "GALILEO activ:" ${listON[$GAL]} "to:"
  for i in "${!listON[@]}"
   do
    num=$i
    value=${listON[$i]}
    echo "$value : $num"
  done
  OLDGAL=${GAL}
  read answer
  if [ -z "${answer}" ]
	then GAL=${OLDGAL}
	else GAL=${answer}
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
gps() {
while :
do 
  echo ""
  echo "GPS activ:" ${listON[$GPS]} "to:"
  for i in "${!listON[@]}"
   do
    num=$i
    value=${listON[$i]}
    echo "$value : $num"
  done
  OLDGPS=${GPS}
  read answer
  if [ -z "${answer}" ]
	then GPS=${OLDGPS}
	else GPS=${answer}
  fi
  eval "echo \"$(< $VAR_VAR_FILE)\"" > $VAR_FILE
  return
done
}
